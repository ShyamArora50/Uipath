<Activity mc:Ignorable="sap sap2010" x:Class="Supplier" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_ValidRecords" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_InvalidRecords" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="in_SupplierName" Type="InArgument(x:String)" />
    <x:Property Name="out_Status" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>390,831</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Supplier_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="23">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Flowchart DisplayName="Supplier" sap:VirtualizedContainerService.HintSize="634,713" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="SOAFilePath" />
      <Variable x:TypeArguments="x:String" Name="SOASheetName" />
      <Variable x:TypeArguments="sd:DataTable" Name="SupplierData" />
      <Variable x:TypeArguments="x:String" Name="MRCText" />
      <Variable x:TypeArguments="x:String" Name="MRCFilePath" />
      <Variable x:TypeArguments="x:String" Name="RecordIDColumnName" />
      <Variable x:TypeArguments="x:String" Name="SupplierSUMColumnName" />
      <Variable x:TypeArguments="x:String" Name="SupplierMRCColumnName" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,107.5 0,107.5 0,663.02 341,663.02 341,600 380,600</av:PointCollection>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <x:Double x:Key="Height">677</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID3</x:Reference>
    </Flowchart.StartNode>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">220,127</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">320,193 320,247</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="init Supplier" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="init status" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[out_Status]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="init SOA File Path" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_54">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[SOAFilePath]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="init SOA Sheet Name" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[SOASheetName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="init MRC File Path" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[MRCFilePath]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="init MRC Text" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[MRCText]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="init Record ID" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_42">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[RecordIDColumnName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="init Supplier SUM Column" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_50">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[SupplierSUMColumnName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="init MRC Column Name" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_52">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[SupplierMRCColumnName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </Assign.Value>
        </Assign>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="CommentOut_3">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,158" sap2010:WorkflowViewState.IdRef="Sequence_41">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Taking input from supplier data" sap:VirtualizedContainerService.HintSize="304,352" sap2010:WorkflowViewState.IdRef="Sequence_33">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="init SOA File Path" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[SOAFilePath]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_" &amp; "SOA").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="init SOA Sheet Name" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[SOASheetName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_" &amp; "SOA_Sheet").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="init MRC File Path" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[MRCFilePath]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_" &amp; "MRC").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </Sequence>
          </ui:CommentOut.Body>
        </ui:CommentOut>
        <Sequence DisplayName="Taking input from supplier data" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_43">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="init SOA File Path" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_46">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[SOAFilePath]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_" &amp; "SOA").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="init SOA Sheet Name" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_47">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[SOASheetName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_" &amp; "SOA_Sheet").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="init MRC File Path" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_48">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[MRCFilePath]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_" &amp; "MRC").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="init MRC Text" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_49">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[RecordIDColumnName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="init Supplier SUM Column" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_51">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[SupplierSUMColumnName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="init MRC Column Name" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_53">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[SupplierMRCColumnName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">220,247</av:Point>
              <av:Size x:Key="ShapeSize">200,66</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">320,313 320,367</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Reading Supplier Information" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Reading SOA" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_14">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Reading Suplpier SOA Data" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="logMessage.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_logString">Reading supplier SOA Data started</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Info</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <ui:ReadRange AddHeaders="True" DataTable="[SupplierData]" DisplayName="Read Supplier SOA Data" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="[SOASheetName]" WorkbookPath="[SOAFilePath]">
                <ui:ReadRange.Range>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ReadRange.Range>
              </ui:ReadRange>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Reading Suplpier SOA Data Completed" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="logMessage.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_logString">Reading supplier SOA Data completed</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Info</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
            </Sequence>
            <Sequence DisplayName="Reading MRC" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_15">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Reading MRC" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="logMessage.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_logString">Reading supplier MRC started</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Info</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <ui:ReadTextFile Content="[MRCText]" DisplayName="Read Text File" FileName="[MRCFilePath]" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ReadTextFile>
              <If Condition="[MRCText = &quot;&quot;]" DisplayName="Checking if have MRC Value" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="If_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Throw DisplayName="No MRC Exception" Exception="[New BusinessRuleException(&quot;Supplier do not have any MRC Value&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                </If.Then>
              </If>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Reading MRC Completed" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="logMessage.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_logString">Reading supplier MRC completed</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Info</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Reading MRC Value" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="logMessage.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_logString">["MRC: " &amp; MRCText]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Info</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
            </Sequence>
            <Sequence DisplayName="Adding details to Data" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_16">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Name="dtRowCounter" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="MRC" DataTable="[SupplierData]" DisplayName="Add MRC Data Column" sap:VirtualizedContainerService.HintSize="312,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" />
              <ui:ForEachRow CurrentIndex="[dtRowCounter]" DataTable="[SupplierData]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="312,250" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="inRow" />
                    </ActivityAction.Argument>
                    <Assign sap2010:Annotation.AnnotationText="Directly adding to the datatable so that changes are automatically updated" DisplayName="Adding MRC Value to data" sap:VirtualizedContainerService.HintSize="262,102" sap2010:WorkflowViewState.IdRef="Assign_9">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[SupplierData.Rows(dtRowCounter).Item("MRC")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[MRCText]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
            </Sequence>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">220,367</av:Point>
                  <av:Size x:Key="ShapeSize">200,66</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">320,433 320,463 310,463 310,476.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Validating Supplier Data" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="init Valid and Invalid Records" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_18">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="New empty invalid Records" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataTable">[out_InvalidRecords]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataTable">[SupplierData.Clone]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="New empty valid Records" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataTable">[out_ValidRecords]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataTable">[SupplierData.Clone]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <Sequence DisplayName="Validate Records" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_19">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="UniqueValues" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Fetching unique accounts/Invoices" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataTable">[UniqueValues]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataTable">[SupplierData.DefaultView.totable(true,RecordIDColumnName)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_39">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Double" Name="SumValue" />
                      <Variable x:TypeArguments="sd:DataTable" Name="TempTable" />
                      <Variable x:TypeArguments="x:Double" Name="MRCValue" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="init for Validation" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_34">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="init Table" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                        <Assign.To>
                          <OutArgument x:TypeArguments="sd:DataTable">[TempTable]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="sd:DataTable">[new DataTable]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="init Table" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                        <Assign.To>
                          <OutArgument x:TypeArguments="sd:DataTable">[TempTable]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="sd:DataTable">[SupplierData.clone]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="init Sum" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Double">[SumValue]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Double">0</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="init MRC" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Double">[MRCValue]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Double">0</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Calculating sum" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="logMessage.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_logString">Calculating Sum for all invoices</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Info</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assigning to temp Table" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sd:DataTable">[TempTable]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sd:DataTable">[SupplierData]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[TempTable]" DisplayName="Calculating sum for each record ID rows" sap:VirtualizedContainerService.HintSize="488,441" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="inRow" />
                          </ActivityAction.Argument>
                          <TryCatch DisplayName="Try Summing" sap:VirtualizedContainerService.HintSize="438,293" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Summing Vrecords values" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">[SumValue]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">[SumValue + cdbl(inRow.Item(SupplierSUMColumnName).ToString)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Fetching MRC Values" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">[MRCValue]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">[cdbl(inRow.Item("MRC").ToString)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Error" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="logMessage.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_logString">["Error while adding record value '" &amp; inRow.Item(SupplierSUMColumnName).ToString &amp; "'" &amp; exception.Message]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Error</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEachRow>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Sum" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="logMessage.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_logString">["Calculated Sum: " &amp; SumValue &amp; "; MRC Value: " &amp; MRCValue.ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Info</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <If Condition="[math.round(SumValue,2,MidpointRounding.AwayFromZero) =math.round(MRCValue,2,MidpointRounding.AwayFromZero)]" DisplayName="Validation" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="If_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Match" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_37">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Adding to valid records" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="logMessage.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_logString">Value matches. adding to valid records</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Info</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <ui:MergeDataTable Destination="[out_ValidRecords]" DisplayName="Adding records to valid records" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MergeDataTable_3" MissingSchemaAction="Add" Source="[TempTable]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="MissMatch" sap:VirtualizedContainerService.HintSize="242,205" sap2010:WorkflowViewState.IdRef="Sequence_38">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Adding to invalid records" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="logMessage.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_logString">Value do not match. adding to invalid records</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Warn</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <ui:MergeDataTable Destination="[out_InvalidRecords]" DisplayName="Adding records to invalid records" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MergeDataTable_4" MissingSchemaAction="Add" Source="[TempTable]" />
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_40">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[UniqueValues]" DisplayName="Checking for each unique value" sap:VirtualizedContainerService.HintSize="307,214" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                          <ui:ForEachRow.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="UnoValue" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="346,1023" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:Double" Name="SumValue" />
                                  <Variable x:TypeArguments="sd:DataTable" Name="TempTable" />
                                  <Variable x:TypeArguments="x:String" Name="recordID" />
                                  <Variable x:TypeArguments="x:Double" Name="MRCValue" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence DisplayName="init for filtering" sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="init Record ID" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[recordID]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[UnoValue.Item(RecordIDColumnName).ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="init Table" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sd:DataTable">[TempTable]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sd:DataTable">[new DataTable]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="init Table" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sd:DataTable">[TempTable]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sd:DataTable">[SupplierData.clone]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="init Sum" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Double">[SumValue]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Double">0</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="init MRC" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Double">[MRCValue]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Double">0</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                                <Sequence DisplayName="Filtering" sap:VirtualizedContainerService.HintSize="304,434" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="sd:DataRow[]" Name="filteredRecords" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Calculating sum for" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="logMessage.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_logString">["Calculating Sum for: " &amp;recordID]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Info</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                  <Assign DisplayName="init Filtered Records" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sd:DataRow[]">[filteredRecords]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sd:DataRow[]">[new DataRow(){}]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Filtering records" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sd:DataRow[]">[filteredRecords]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sd:DataRow[]">[SupplierData.select("[" &amp; RecordIDColumnName &amp; "] = '" &amp; recordID &amp; "'")]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If Condition="[filteredRecords.Length &gt; 0]" DisplayName="Got Records?" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="If_2">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Assign DisplayName="Assigning to temp Table" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="sd:DataTable">[TempTable]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="sd:DataTable">[filteredRecords.CopyToDataTable]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                </Sequence>
                                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[TempTable]" DisplayName="Calculating sum for each record ID rows" sap:VirtualizedContainerService.HintSize="304,51" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                                  <ui:ForEachRow.Body>
                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="inRow" />
                                      </ActivityAction.Argument>
                                      <TryCatch DisplayName="Try Summing" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <TryCatch.Try>
                                          <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign DisplayName="Summing Vrecords values" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Double">[SumValue]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Double">[SumValue + cdbl(inRow.Item(SupplierSUMColumnName).ToString)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign DisplayName="Fetching MRC Values" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Double">[MRCValue]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Double">[cdbl(inRow.Item("MRC").ToString)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Error" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="logMessage.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_logString">["Error while adding record value '" &amp; inRow.Item("TransValue").ToString &amp; "'" &amp; exception.Message]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Error</InArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:InvokeWorkflowFile>
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </ActivityAction>
                                  </ui:ForEachRow.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ForEachRow>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Sum" sap:VirtualizedContainerService.HintSize="304,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="logMessage.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_logString">["Calculated Sum: " &amp; SumValue &amp; "; MRC Value: " &amp; MRCValue.ToString]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Info</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InvokeWorkflowFile>
                                <If Condition="[math.round(SumValue,2,MidpointRounding.AwayFromZero) =math.round(MRCValue,2,MidpointRounding.AwayFromZero)]" DisplayName="Validation" sap:VirtualizedContainerService.HintSize="304,51" sap2010:WorkflowViewState.IdRef="If_3">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence DisplayName="Match" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Adding to valid records" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="logMessage.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_logString">Value matches. adding to valid records</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Info</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeWorkflowFile>
                                      <ui:MergeDataTable Destination="[out_ValidRecords]" DisplayName="Adding records to valid records" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MergeDataTable_1" MissingSchemaAction="Add" Source="[TempTable]" />
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="MissMatch" sap:VirtualizedContainerService.HintSize="242,205" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Adding to invalid records" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="logMessage.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_logString">Value do not match. adding to invalid records</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Warn</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeWorkflowFile>
                                      <ui:MergeDataTable Destination="[out_InvalidRecords]" DisplayName="Adding records to invalid records" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MergeDataTable_2" MissingSchemaAction="Add" Source="[TempTable]" />
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEachRow.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEachRow>
                      </Sequence>
                    </ui:CommentOut.Body>
                  </ui:CommentOut>
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,158" sap2010:WorkflowViewState.IdRef="Sequence_32">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Temporary - Output" sap:VirtualizedContainerService.HintSize="641,307" sap2010:WorkflowViewState.IdRef="Sequence_24">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="599,215" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" MacroSetting="DisableAll" Visible="False" WorkbookPath="C:\Users\HyperPro\Documents\UiPath\FAB_Telecom Expense Management\Suppliers\Output.xlsx">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelWriteRange AddHeaders="True" DataTable="[ValidRecords]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Valid" StartingCell="A1" />
                                  <ui:ExcelWriteRange AddHeaders="True" DataTable="[inValidRecords]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="inValid" StartingCell="A1" />
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ExcelApplicationScope>
                        </Sequence>
                      </Sequence>
                    </ui:CommentOut.Body>
                  </ui:CommentOut>
                </Sequence>
                <If Condition="[out_ValidRecords.rows.Count &gt; 0]" DisplayName="Checking if have any positive record" sap:VirtualizedContainerService.HintSize="569,208" sap2010:WorkflowViewState.IdRef="If_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Assign DisplayName="Assign status" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_Status]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Success</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Assign DisplayName="Assign status" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_56">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_Status]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">["Supplier do not have any positive records for processing"]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
              </Sequence>
              <FlowStep.Next>
                <FlowDecision x:Name="__ReferenceID2" Condition="[out_Status &lt;&gt; &quot;Success&quot;]" DisplayName="Success?" sap:VirtualizedContainerService.HintSize="70,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">275,476.5</av:Point>
                      <av:Size x:Key="ShapeSize">70,87</av:Size>
                      <av:PointCollection x:Key="FalseConnector">345,520 480,520 480,567</av:PointCollection>
                      <av:PointCollection x:Key="TrueConnector">275,520 120,520 120,567</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">20,567</av:Point>
                          <av:Size x:Key="ShapeSize">200,66</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Exit Sequence" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_44">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Exiting prematurly" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="logMessage.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_logString">Exiting Maturily</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Info</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </FlowStep>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowStep x:Name="__ReferenceID3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">380,567</av:Point>
                          <av:Size x:Key="ShapeSize">200,66</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Preparing Upload template" sap:VirtualizedContainerService.HintSize="242,461" sap2010:WorkflowViewState.IdRef="Sequence_45">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sd:DataTable" Name="templateData" />
                          <Variable x:TypeArguments="x:String" Name="SupplierDescriptionColumnName" />
                          <Variable x:TypeArguments="x:String" Name="SupplierPeriodColumnName" />
                          <Variable x:TypeArguments="x:String" Name="SupplierTypeColumnName" />
                          <Variable x:TypeArguments="x:String" Name="SupplierCurrencyColumnName" />
                          <Variable x:TypeArguments="x:String" Name="SupplierDCColumnName" />
                          <Variable x:TypeArguments="x:String" Name="SupplierBusinessUnit" />
                          <Variable x:TypeArguments="x:String" Name="SupplierDisplayName" />
                          <Variable x:TypeArguments="x:String" Name="SupplierNumber" />
                          <Variable x:TypeArguments="x:String" Name="SupplierSite" />
                          <Variable x:TypeArguments="x:String" Name="SupplierDescription" />
                          <Variable x:TypeArguments="x:String" Name="SupplierPaymentTerms" />
                          <Variable x:TypeArguments="x:String" Name="SupplierProductCatagory" />
                          <Variable x:TypeArguments="x:String" Name="SupplierRecordDescription" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="CommentOut_7">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,158" sap2010:WorkflowViewState.IdRef="Sequence_65">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="init Variables" sap:VirtualizedContainerService.HintSize="376,363" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence DisplayName="Column Name" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="init SupplierDescriptionColumnName" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[SupplierDescriptionColumnName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_SupplierDescription_ColumnName").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="init SupplierPeriodColumnName" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[SupplierPeriodColumnName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_SupplierPeriod_ColumnName").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="init SupplierTypeColumnName" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_59">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[SupplierTypeColumnName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_SupplierType_ColumnName").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="init SupplierCurrencyColumnName" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_60">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[SupplierCurrencyColumnName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_SupplierCurrency_ColumnName").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="init SupplierDCColumnName" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_61">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[SupplierDCColumnName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_SupplierDC_ColumnName").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                                <Sequence DisplayName="Constant Values" sap:VirtualizedContainerService.HintSize="304,852" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="init SupplierBusinessUnit" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_88">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[SupplierBusinessUnit]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_SupplierBusinessUnit").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="init SupplierDisplayName" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_89">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[SupplierDisplayName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_SupplierDisplayName").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="init SupplierNumber" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_90">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[SupplierNumber]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_SupplierNumber").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="init SupplierSite" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_91">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[SupplierSite]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_SupplierSite").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="init SupplierDescription" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_92">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[SupplierDescription]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_SupplierDescription").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="init SupplierPaymentTerms" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_93">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[SupplierPaymentTerms]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_SupplierPaymentTerms").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="init SupplierProductCatagory" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_94">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[SupplierProductCatagory]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_SupplierProductCatagory").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="init SupplierRecordDescription" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_105">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[SupplierRecordDescription]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[in_Config(in_SupplierName &amp; "_SupplierRecordDescription").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                                <ui:BuildDataTable DataTable="[templateData]" DisplayName="init TemplateData" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;InvoiceHeader&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Line&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;SupplierDisplayName&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Description&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InvoiceNumber&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Period&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Type&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Currency&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Charge&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DC&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;FirstDateOfMonth&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;SupplierBusinessUnit&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;SupplierNumber&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;SupplierSite&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;SupplierDescription&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;SupplierPaymentTerms&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;SupplierProductCatagory&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:BuildDataTable>
                              </Sequence>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                        <Sequence DisplayName="Hard coding" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_59">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ReadRange AddHeaders="True" DataTable="[out_ValidRecords]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="Valid" WorkbookPath="C:\Users\HyperPro\Documents\UiPath\FAB_Telecom Expense Management\Suppliers\Output.xlsx">
                            <ui:ReadRange.Range>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:ReadRange.Range>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ReadRange>
                          <Assign DisplayName="init RecordIDColumnName" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_78">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[in_SupplierName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Apni Company</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="init RecordIDColumnName" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_86">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[SupplierSUMColumnName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Entered Balance</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="init RecordIDColumnName" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_87">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[SupplierSUMColumnName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Entered Balance</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="init RecordIDColumnName" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_85">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[SupplierMRCColumnName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">MRC</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="init RecordIDColumnName" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_84">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[RecordIDColumnName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Order No Reference</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="init SupplierPeriodColumnName" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_79">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[SupplierPeriodColumnName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Trans Date</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="init SupplierTypeColumnName" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_80">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[SupplierTypeColumnName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Country</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="init SupplierCurrencyColumnName" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_81">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[SupplierCurrencyColumnName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Currency</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="init SupplierDCColumnName" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_82">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[SupplierDCColumnName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">["LE_RC_GL"]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Sequence DisplayName="Constant Values" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_64">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="init SupplierRecordDescription" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_95">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[SupplierRecordDescription]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["Invoice for " &amp; in_SupplierName]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="init SupplierBusinessUnit" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_106">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[SupplierBusinessUnit]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Sample_SupplierBusinessUnit</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="init SupplierDisplayName" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_96">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[SupplierDisplayName]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Sample_SupplierDisplayName</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="init SupplierNumber" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_97">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[SupplierNumber]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Sample_SupplierNumber</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="init SupplierSite" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_98">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[SupplierSite]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Sample_SupplierSite</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="init SupplierDescription" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_99">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[SupplierDescription]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Sample_SupplierDescription</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="init SupplierPaymentTerms" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_100">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[SupplierPaymentTerms]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Sample_SupplierPaymentTerms</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="init SupplierProductCatagory" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_101">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[SupplierProductCatagory]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Sample_SupplierProductCatagory</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                          <ui:BuildDataTable DataTable="[templateData]" DisplayName="init TemplateData" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;              &lt;xs:sequence&gt;&#xD;&#xA;                &lt;xs:element name=&quot;InvoiceHeader&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Line&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;SupplierDisplayName&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;RecordDescription&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;InvoiceNumber&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Period&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Type&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Currency&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Charge&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;DC&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;FirstDateOfMonth&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;SupplierBusinessUnit&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;SupplierNumber&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;SupplierSite&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;SupplierDescription&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;SupplierPaymentTerms&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;SupplierProductCatagory&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;              &lt;/xs:sequence&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;&lt;/NewDataSet&gt;">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:BuildDataTable>
                        </Sequence>
                        <Sequence DisplayName="Preparing Data" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_48">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Preparing data started" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="logMessage.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_logString">Preparing data started</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Info</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <Sequence DisplayName="Iterating Records" sap:VirtualizedContainerService.HintSize="304,343" sap2010:WorkflowViewState.IdRef="Sequence_56">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="sd:DataTable" Name="UniqueValues" />
                              <Variable x:TypeArguments="x:Int32" Name="Header" />
                              <Variable x:TypeArguments="x:Int32" Name="LineCounter" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Fetching unique accounts/Invoices" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_67">
                              <Assign.To>
                                <OutArgument x:TypeArguments="sd:DataTable">[UniqueValues]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="sd:DataTable">[out_ValidRecords.DefaultView.totable(true,RecordIDColumnName)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="init Line counter" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_76">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[LineCounter]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ForEachRow CurrentIndex="[Header]" DataTable="[UniqueValues]" DisplayName="Checking for each unique value" sap:VirtualizedContainerService.HintSize="307,214" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
                              <ui:ForEachRow.Body>
                                <ActivityAction x:TypeArguments="sd:DataRow">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="UnoValue" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,355" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="sd:DataTable" Name="TempTable" />
                                      <Variable x:TypeArguments="x:String" Name="recordID" />
                                      <Variable x:TypeArguments="x:Int32" Name="recordCounter" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Sequence DisplayName="init for filtering" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="init Record ID" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_68">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[recordID]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[UnoValue.Item(RecordIDColumnName).ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="init Table" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_69">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="sd:DataTable">[TempTable]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="sd:DataTable">[new DataTable]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="init Table" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_70">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="sd:DataTable">[TempTable]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="sd:DataTable">[out_ValidRecords.clone]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                    <Sequence DisplayName="Filtering" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="sd:DataRow[]" Name="filteredRecords" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="init Filtered Records" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_71">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="sd:DataRow[]">[filteredRecords]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="sd:DataRow[]">[new DataRow(){}]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Filtering records" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_72">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="sd:DataRow[]">[filteredRecords]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="sd:DataRow[]">[out_ValidRecords.select("[" &amp; RecordIDColumnName &amp; "] = '" &amp; recordID &amp; "'")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[filteredRecords.Length &gt; 0]" DisplayName="Got Records?" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="If_9">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Assign DisplayName="Assigning to temp Table" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_73">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="sd:DataTable">[TempTable]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="sd:DataTable">[filteredRecords.CopyToDataTable]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                    <ui:ForEachRow CurrentIndex="[recordCounter]" DataTable="[TempTable]" DisplayName="Adding each row for the record" sap:VirtualizedContainerService.HintSize="307,208" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
                                      <ui:ForEachRow.Body>
                                        <ActivityAction x:TypeArguments="sd:DataRow">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="inRow" />
                                          </ActivityAction.Argument>
                                          <TryCatch DisplayName="Try Adding" sap:VirtualizedContainerService.HintSize="438,293" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <TryCatch.Try>
                                              <Sequence DisplayName="Adding record" sap:VirtualizedContainerService.HintSize="526,563" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="incrementing line counter" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_77">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[LineCounter]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[LineCounter + 1]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="484,51" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                                                  <ui:CommentOut.Body>
                                                    <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                                      <Sequence DisplayName="Debug Writeline" sap:VirtualizedContainerService.HintSize="262,66" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Header: &quot; &amp; Header]" />
                                                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;LineCounter: &quot; &amp; LineCounter]" />
                                                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[&quot;in_SupplierName: &quot; &amp; in_SupplierName]" />
                                                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[&quot;inRow(RecordIDColumnName).ToString: &quot; &amp; inRow(RecordIDColumnName).ToString]" />
                                                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[&quot;inRow(SupplierPeriodColumnName).ToString: &quot; &amp; inRow(SupplierPeriodColumnName).ToString]" />
                                                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="[&quot;inRow(SupplierTypeColumnName).ToString: &quot; &amp; inRow(SupplierTypeColumnName).ToString]" />
                                                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="[&quot;inRow(SupplierCurrencyColumnName).ToString: &quot; &amp; inRow(SupplierCurrencyColumnName).ToString]" />
                                                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="[&quot;inRow(SupplierSUMColumnName).ToString: &quot; &amp; inRow(SupplierSUMColumnName).ToString]" />
                                                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="[&quot;inRow(SupplierDCColumnName).ToString: &quot; &amp; inRow(SupplierDCColumnName).ToString]" />
                                                      </Sequence>
                                                    </Sequence>
                                                  </ui:CommentOut.Body>
                                                </ui:CommentOut>
                                                <If sap2010:Annotation.AnnotationText="For each invoiceNumber (RecordID), this if condition will be called as many times as it has records with same record ID.&#xA;Only the first entry for the same invoice number should have all the information and the rest should only have essential values" Condition="[recordCounter = 0]" DisplayName="First Record" sap:VirtualizedContainerService.HintSize="484,280" sap2010:WorkflowViewState.IdRef="If_10">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{(Header + 1),LineCounter,SupplierDisplayName,SupplierRecordDescription,inRow(RecordIDColumnName).ToString,inRow(SupplierPeriodColumnName).ToString,inRow(SupplierTypeColumnName).ToString,inRow(SupplierCurrencyColumnName).ToString,inRow(SupplierSUMColumnName).ToString,inRow(SupplierDCColumnName).ToString,Now.ToString(&quot;01/MM/yyyy&quot;),SupplierBusinessUnit,SupplierNumber,SupplierSite,SupplierDescription,SupplierPaymentTerms,SupplierProductCatagory}]" DataTable="[templateData]" DisplayName="Adding all parts" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                                                  </If.Then>
                                                  <If.Else>
                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{(Header + 1),LineCounter,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,inRow(SupplierSUMColumnName).ToString,inRow(SupplierDCColumnName).ToString}]" DataTable="[templateData]" DisplayName="Adding only Essential Parts" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Error" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="logMessage.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_logString">["Error while adding record value '" &amp; inRow.Item(RecordIDColumnName).ToString &amp; "'" &amp; exception.Message]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Error</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:InvokeWorkflowFile>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                        </ActivityAction>
                                      </ui:ForEachRow.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ForEachRow>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEachRow.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ForEachRow>
                          </Sequence>
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="CommentOut_10">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                <Sequence DisplayName="Copy over to valid records" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_103">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sd:DataTable">[out_ValidRecords]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sd:DataTable">[new DataTable]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_104">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sd:DataTable">[out_ValidRecords]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sd:DataTable">[templateData.Clone]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </Sequence>
                            </ui:CommentOut.Body>
                          </ui:CommentOut>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_102">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sd:DataTable">[out_ValidRecords]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sd:DataTable">[templateData]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Preparing data completed" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="logMessage.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_logString">Preparing data completed</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">Info</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                        <Sequence DisplayName="Creating Output Template" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_66">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Creating output started" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="logMessage.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                                <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_logString">
                                <Literal x:TypeArguments="x:String">Creating output file started</Literal>
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">
                                <Literal x:TypeArguments="x:String">Info</Literal>
                              </InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CreateOutputTemplate workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="CreateOutputTemplate.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_ValidRecords">
                                <mva:VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="out_ValidRecords" />
                              </InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                                <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_SupplierName">
                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_SupplierName" />
                              </InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Creating output completed" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="logMessage.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                                <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_logString">
                                <Literal x:TypeArguments="x:String">Creating output file completed</Literal>
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">
                                <Literal x:TypeArguments="x:String">Info</Literal>
                              </InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                      </Sequence>
                    </FlowStep>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
  </Flowchart>
</Activity>