<Activity mc:Ignorable="sap sap2010" x:Class="CreateOutputTemplate" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ValidRecords" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_SupplierName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>390,831</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>CreateOutputTemplate_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="23">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="24">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="CreateOutputTemplate" sap:VirtualizedContainerService.HintSize="304,660" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="TemplateFilePath" />
      <Variable x:TypeArguments="x:String" Name="OutputFilePath" />
      <Variable x:TypeArguments="x:Int32" Name="FirstRow" />
      <Variable x:TypeArguments="x:String" Name="TemplateSheetName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="HardCoding" sap:VirtualizedContainerService.HintSize="262,68" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="262,52" sap2010:WorkflowViewState.IdRef="CommentOut_1">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <ui:ReadRange AddHeaders="True" DataTable="[in_ValidRecords]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="262,52" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Sheet1" WorkbookPath="C:\Users\HyperPro\Documents\UiPath\FAB_Telecom Expense Management\Data\Output\OracleUploadTemplate.xlsx">
              <ui:ReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ReadRange.Range>
            </ui:ReadRange>
          </Sequence>
        </ui:CommentOut.Body>
      </ui:CommentOut>
      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[FirstRow]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">9</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[in_Config]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(of String, Object)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[in_Config("OutputFolder")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">["C:\Users\HyperPro\Documents\UiPath\FAB_Telecom Expense Management\Data\Output"]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="262,52" sap2010:WorkflowViewState.IdRef="CommentOut_2">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[in_SupplierName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Nokia</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ui:CommentOut.Body>
      </ui:CommentOut>
      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[TemplateFilePath]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">C:\Users\HyperPro\Documents\UiPath\FAB_Telecom Expense Management\Data\Input\Oracle Template.xlsx</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[TemplateSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">Sheet1</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Sequence DisplayName="Init" sap:VirtualizedContainerService.HintSize="262,68" sap2010:WorkflowViewState.IdRef="Sequence_12">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Init TemplateFilePath" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[TemplateFilePath]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Config("TemplateFilePath").ToString]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="init TemplateSheetName" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[TemplateSheetName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Config("TemplateSheetName").ToString]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Assign DisplayName="Preparing output file path" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[OutputFilePath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Config("OutputFolder").ToString &amp; "\" &amp; in_SupplierName &amp; "_Upload.xlsx"]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Copying Template file path" sap:VirtualizedContainerService.HintSize="262,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="logMessage.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_logString">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Copy template file from: &quot; &amp; TemplateFilePath" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">
          <Literal x:TypeArguments="x:String">Info</Literal>
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:CopyFile ContinueOnError="{x:Null}" Destination="[OutputFilePath]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="262,52" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[TemplateFilePath]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CopyFile>
    <Sequence DisplayName="Writing to output file" sap:VirtualizedContainerService.HintSize="242,328" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Writing to upload file started" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="logMessage.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
            <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_logString">
            <Literal x:TypeArguments="x:String">Writing to upload file started</Literal>
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">
            <Literal x:TypeArguments="x:String">Info</Literal>
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,177" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Visible="False" WorkbookPath="[OutputFilePath]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Looping through each record" sap:VirtualizedContainerService.HintSize="510,2387" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Name="outputRowCounter" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ForEachRow CurrentIndex="[outputRowCounter]" DataTable="[in_ValidRecords]" DisplayName="For Each Row in valid records" sap:VirtualizedContainerService.HintSize="468,2295" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="inRow" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="418,2146" sap2010:WorkflowViewState.IdRef="Sequence_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelWriteCell Cell="[&quot;E&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write InvoiceHeader" sap:VirtualizedContainerService.HintSize="376,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;InvoiceHeader&quot;).ToString.Trim]" />
                      <ui:ExcelWriteCell Cell="[&quot;BX&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="376,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;Line&quot;).ToString.Trim]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ExcelWriteCell>
                      <ui:ExcelWriteCell Cell="[&quot;L&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write SupplierDisplayName" sap:VirtualizedContainerService.HintSize="376,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;SupplierDisplayName&quot;).ToString.Trim]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ExcelWriteCell>
                      <ui:ExcelWriteCell Cell="[&quot;L&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write SupplierDisplayName" sap:VirtualizedContainerService.HintSize="376,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;SupplierDisplayName&quot;).ToString.Trim]" />
                      <ui:ExcelWriteCell Cell="[&quot;H&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write InvoiceNumber" sap:VirtualizedContainerService.HintSize="376,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;InvoiceNumber&quot;).ToString.Trim]" />
                      <ui:ExcelWriteCell Cell="[&quot;P&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write Type" sap:VirtualizedContainerService.HintSize="376,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;Type&quot;).ToString.Trim]" />
                      <ui:ExcelWriteCell Cell="[&quot;O&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write Currency" sap:VirtualizedContainerService.HintSize="376,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;Currency&quot;).ToString.Trim]" />
                      <ui:ExcelWriteCell Cell="[&quot;I&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write Currency" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;Currency&quot;).ToString.Trim]" />
                      <ui:ExcelWriteCell Cell="[&quot;J&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write Charge" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;Charge&quot;).ToString.Trim]" />
                      <ui:ExcelWriteCell Cell="[&quot;BZ&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write Charge" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;Charge&quot;).ToString.Trim]" />
                      <ui:ExcelWriteCell Cell="[&quot;CP&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write DC" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;DC&quot;).ToString.Trim]" />
                      <ui:ExcelWriteCell Cell="[&quot;K&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write FirstDateOfMonth" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_13" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;FirstDateOfMonth&quot;).ToString.Trim]" />
                      <ui:ExcelWriteCell Cell="[&quot;W&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write FirstDateOfMonth" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_14" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;FirstDateOfMonth&quot;).ToString.Trim]" />
                      <Sequence DisplayName="Fixed Values" sap:VirtualizedContainerService.HintSize="376,858" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelWriteCell Cell="[&quot;F&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write SupplierBusinessUnit" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_15" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;SupplierBusinessUnit&quot;).ToString.Trim]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ExcelWriteCell>
                        <ui:ExcelWriteCell Cell="[&quot;L&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write SupplierDisplayName" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_16" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;SupplierDisplayName&quot;).ToString.Trim]" />
                        <ui:ExcelWriteCell Cell="[&quot;M&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write SupplierNumber" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_17" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;SupplierNumber&quot;).ToString.Trim]" />
                        <ui:ExcelWriteCell Cell="[&quot;N&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write SupplierSite" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_18" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;SupplierSite&quot;).ToString.Trim]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ExcelWriteCell>
                        <ui:ExcelWriteCell Cell="[&quot;Q&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write SupplierDescription" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_19" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;RecordDescription&quot;).ToString.Trim]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ExcelWriteCell>
                        <ui:ExcelWriteCell Cell="[&quot;CD&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write SupplierDescription" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_20" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;SupplierDescription&quot;).ToString.Trim]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ExcelWriteCell>
                        <ui:ExcelWriteCell Cell="[&quot;S&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write SupplierPaymentTerms" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_21" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;SupplierPaymentTerms&quot;).ToString.Trim]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ExcelWriteCell>
                        <ui:ExcelWriteCell Cell="[&quot;DR&quot; &amp; (FirstRow + outputRowCounter)]" DisplayName="Write SupplierProductCatagory" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_22" SheetName="[TemplateSheetName]" Text="[inRow.Item(&quot;SupplierProductCatagory&quot;).ToString.Trim]" />
                      </Sequence>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachRow>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log: Writing to upload file completed" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="logMessage.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
            <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_logString">
            <Literal x:TypeArguments="x:String">Writing to upload file completed</Literal>
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_logLevel">
            <Literal x:TypeArguments="x:String">Info</Literal>
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
    </Sequence>
  </Sequence>
</Activity>